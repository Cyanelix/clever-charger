@startuml
[-> Scheduler: every ""n"" minutes
activate Scheduler

alt now > nextCheck
    Scheduler -> ChargeController: chargeIfNeeded()
    activate ChargeController

    ChargeController -> TeslaClient: getChargeState()
    activate TeslaClient
    ChargeController <-- TeslaClient: ChargeState
    deactivate TeslaClient

    alt pluggedIn
        ChargeController -> RequiredCharges: getNextRequiredCharge()
        activate RequiredCharges
        ChargeController <-- RequiredCharges: RequiredCharge
        deactivate RequiredCharges

        ChargeController -> ChargeCalculator: needToCharge(RequiredCharge, ChargeState)
        activate ChargeCalculator

        ChargeCalculator -> Tariff: getRatePeriodsUntil(Instant)
        activate Tariff
        ChargeCalculator <-- Tariff: RatePeriod[]

        ChargeController <-- ChargeCalculator: ChargePeriod
        deactivate ChargeCalculator

        alt chargePeriod.chargeNow && !charging
            ChargeController -> TeslaClient: startCharge()
            activate TeslaClient
            ChargeController <-- TeslaClient: estimatedFinishTime
            note right: estimatedFinishTime could inform time to next check?
            deactivate TeslaClient
        else !chargePeriod.chargeNow && charging
            ChargeController -> TeslaClient: stopCharge()
            activate TeslaClient
            ChargeController <-- TeslaClient
            deactivate TeslaClient
        end
    end

    Scheduler <-- ChargeController: nextCheck
    note right: nextCheck could be the estimatedFinishTime, if we started charging, or the time ChargeCalculator\nsuggests for next starting charging
end
@enduml
